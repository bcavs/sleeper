generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model player {
  active                 Boolean?
  age                    Int?
  birth_city             String?
  birth_country          String?
  birth_date             String?
  birth_state            String?
  college                String?
  depth_chart_order      Int?
  depth_chart_position   String?
  espn_id                Int?
  fantasy_data_id        Int?
  fantasy_positions      String?
  first_name             String?
  full_name              String?
  gsis_id                String?
  hashtag                String?
  height                 String?
  high_school            String?
  injury_body_part       String?
  injury_notes           String?
  injury_start_date      String?
  injury_status          String?
  last_name              String?
  metadata               String?
  number                 Int?
  oddsjam_id             String?
  pandascore_id          String?
  position               String?
  practice_description   String?
  practice_participation String?
  rotowire_id            Int?
  rotoworld_id           Int?
  search_first_name      String?
  search_full_name       String?
  search_last_name       String?
  search_rank            Int?
  sport                  String?
  sportradar_id          String?
  stats_id               Int?
  status                 String?
  swish_id               Int?
  team                   String?
  weight                 String?
  yahoo_id               Int?
  years_exp              Int?
  news_updated           Int?
  team_abbr              String?
  updated_at             DateTime? @db.Timestamptz(6)
  player_id              String    @id @unique
}

model team {
  id               String
  uid              String
  slug             String
  abbreviation     String  @id
  displayName      String
  shortDisplayName String
  name             String
  nickname         String
  location         String
  color            String
  alternateColor   String
  isActive         Boolean
  isAllStar        Boolean
  logos            logo[]
  links            link[]
}

model logo {
  href   String    @id
  alt    String
  width  Int
  height Int
  teamId String
  team   team      @relation(fields: [teamId], references: [abbreviation])
  rel    logoRel[]
}

model logoRel {
  id     Int    @id @default(autoincrement())
  value  String
  logoId String
  logo   logo   @relation(fields: [logoId], references: [href])
}

model link {
  href       String  @id
  language   String
  text       String
  shortText  String
  isExternal Boolean
  isPremium  Boolean
  isHidden   Boolean
  teamId     String
  team       team    @relation(fields: [teamId], references: [abbreviation])
}
